{"version":3,"file":"lib.js","sources":["../../src/api/legendSets.js","../../src/ChartPlugin.js","../../src/PivotPlugin.js","../../src/api/analytics.js","../../src/modules/analytics.js","../../src/modules/options.js","../../src/modules/getRequestOptions.js","../../src/modules/fetchData.js","../../src/VisualizationPlugin.js"],"sourcesContent":["const legendSetsQuery = {\n    legendSets: {\n        resource: 'legendSets',\n        params: ({ ids }) => ({\n            fields:\n                'id,legends[id,displayName~rename(name),startValue,endValue,color]',\n            filter: `id:in:[${ids.join(',')}]`,\n        }),\n    },\n}\n\nexport const apiFetchLegendSets = (dataEngine, ids) =>\n    dataEngine.query(legendSetsQuery, { variables: { ids } })\n","import React, { useRef, useCallback, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { isSingleValue, createVisualization } from '@dhis2/analytics'\n\nconst ChartPlugin = ({\n    visualization,\n    responses,\n    extraOptions,\n    legendSets,\n    id: renderCounter,\n    style,\n    onChartGenerated,\n    animation: defaultAnimation,\n}) => {\n    const canvasRef = useRef(undefined)\n\n    const renderVisualization = useCallback(\n        animation => {\n            const visualizationConfig = createVisualization(\n                responses,\n                visualization,\n                canvasRef.current,\n                {\n                    ...extraOptions,\n                    animation,\n                    legendSets,\n                },\n                undefined,\n                undefined,\n                isSingleValue(visualization.type) ? 'dhis' : 'highcharts' // output format\n            )\n\n            if (isSingleValue(visualization.type)) {\n                onChartGenerated(visualizationConfig.visualization)\n            } else {\n                onChartGenerated(\n                    visualizationConfig.visualization.getSVGForExport({\n                        sourceHeight: 768,\n                        sourceWidth: 1024,\n                    })\n                )\n            }\n        },\n        [\n            canvasRef,\n            visualization,\n            onChartGenerated,\n            responses,\n            extraOptions,\n            legendSets,\n        ]\n    )\n\n    useEffect(() => {\n        renderVisualization(defaultAnimation)\n\n        /* eslint-disable-next-line react-hooks/exhaustive-deps */\n    }, [visualization, responses, extraOptions])\n\n    useEffect(() => {\n        renderVisualization(0)\n\n        /* eslint-disable-next-line react-hooks/exhaustive-deps */\n    }, [renderCounter, style])\n\n    return <div ref={canvasRef} style={style} />\n}\n\nChartPlugin.defaultProps = {\n    visualization: {},\n    filters: {},\n    style: {},\n    animation: 200,\n    onChartGenerated: Function.prototype,\n}\n\nChartPlugin.propTypes = {\n    extraOptions: PropTypes.object.isRequired,\n    legendSets: PropTypes.arrayOf(PropTypes.object).isRequired,\n    responses: PropTypes.arrayOf(PropTypes.object).isRequired,\n    visualization: PropTypes.object.isRequired,\n    animation: PropTypes.number,\n    id: PropTypes.number,\n    style: PropTypes.object,\n    onChartGenerated: PropTypes.func,\n}\n\nexport default ChartPlugin\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { PivotTable } from '@dhis2/analytics'\n\nconst PivotPlugin = ({\n    responses,\n    legendSets,\n    visualization,\n    style,\n    id: renderCounter,\n}) => {\n    return (\n        <div style={style}>\n            <PivotTable\n                visualization={visualization}\n                data={responses[0].response}\n                legendSets={legendSets}\n                renderCounter={renderCounter}\n            />\n        </div>\n    )\n}\n\nPivotPlugin.defaultProps = {\n    style: {},\n}\n\nPivotPlugin.propTypes = {\n    legendSets: PropTypes.arrayOf(PropTypes.object).isRequired,\n    responses: PropTypes.arrayOf(PropTypes.object).isRequired,\n    visualization: PropTypes.object.isRequired,\n    id: PropTypes.number,\n    style: PropTypes.object,\n}\n\nexport default PivotPlugin\n","import { VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics'\n\nconst peId = 'pe'\n\nexport const apiFetchAnalytics = async (d2, current, options) => {\n    const req = new d2.analytics.request()\n        .fromModel(current)\n        .withParameters(options)\n        .withIncludeNumDen(current.type === VIS_TYPE_PIVOT_TABLE)\n\n    const rawResponse = await d2.analytics.aggregate.get(req)\n\n    return [new d2.analytics.response(rawResponse)]\n}\n\nexport const apiFetchAnalyticsForYearOverYear = async (\n    d2,\n    current,\n    options\n) => {\n    let yearlySeriesReq = new d2.analytics.request()\n        .addPeriodDimension(current.yearlySeries)\n        .withSkipData(true)\n        .withSkipMeta(false)\n        .withIncludeMetadataDetails(true)\n\n    if (options.relativePeriodDate) {\n        yearlySeriesReq = yearlySeriesReq.withRelativePeriodDate(\n            options.relativePeriodDate\n        )\n    }\n\n    const yearlySeriesRes = await d2.analytics.aggregate.fetch(yearlySeriesReq)\n\n    const requests = []\n    const yearlySeriesLabels = []\n\n    const now = new Date()\n    const currentDay = ('' + now.getDate()).padStart(2, 0)\n    const currentMonth = ('' + (now.getMonth() + 1)).padStart(2, 0)\n\n    yearlySeriesRes.metaData.dimensions[peId].forEach(period => {\n        yearlySeriesLabels.push(yearlySeriesRes.metaData.items[period].name)\n\n        const startDate = `${period}-${currentMonth}-${currentDay}`\n\n        const req = new d2.analytics.request()\n            .fromModel(current)\n            .withParameters(options)\n            .withRelativePeriodDate(startDate)\n\n        requests.push(d2.analytics.aggregate.get(req))\n    })\n\n    return Promise.all(requests).then(responses => ({\n        responses: responses.map(res => new d2.analytics.response(res)),\n        yearlySeriesLabels,\n    }))\n}\n","export const computeGenericPeriodNames = responses => {\n    const xAxisRes = responses.reduce((out, res) => {\n        if (out.metaData) {\n            if (\n                res.metaData.dimensions.pe.length >\n                out.metaData.dimensions.pe.length\n            ) {\n                out = res\n            }\n        } else {\n            out = res\n        }\n\n        return out\n    }, {})\n\n    const metadata = xAxisRes.metaData\n\n    return metadata.dimensions.pe.reduce((genericPeriodNames, periodId) => {\n        const name = metadata.items[periodId].name\n\n        // until the day the backend will support this in the API:\n        // trim off the trailing year in the period name\n        // english names should all have the year at the end of the string\n        genericPeriodNames.push(name.replace(/\\s+\\d{4}$/, ''))\n\n        return genericPeriodNames\n    }, [])\n}\n","import pick from 'lodash-es/pick'\n\nexport const options = {\n    baseLineLabel: {\n        defaultValue: undefined,\n        requestable: false,\n        savable: true,\n    },\n    baseLineValue: {\n        defaultValue: undefined,\n        requestable: false,\n        savable: true,\n    },\n    // colorSet:\n    cumulativeValues: {\n        defaultValue: false,\n        requestable: false,\n        savable: true,\n    },\n    domainAxisLabel: {\n        defaultValue: undefined,\n        requestable: false,\n        savable: true,\n    },\n    hideEmptyRowItems: {\n        defaultValue: 'NONE',\n        requestable: false,\n        savable: true,\n    },\n    hideLegend: { defaultValue: false, requestable: false, savable: true },\n    noSpaceBetweenColumns: {\n        defaultValue: false,\n        requestable: false,\n        savable: true,\n    },\n    percentStackedValues: {\n        defaultValue: false,\n        requestable: false,\n        savable: true,\n    },\n    rangeAxisDecimals: {\n        defaultValue: undefined,\n        requestable: false,\n        savable: true,\n    },\n    rangeAxisLabel: {\n        defaultValue: undefined,\n        requestable: false,\n        savable: true,\n    },\n    rangeAxisMaxValue: {\n        defaultValue: undefined,\n        requestable: false,\n        savable: true,\n    },\n    rangeAxisMinValue: {\n        defaultValue: undefined,\n        requestable: false,\n        savable: true,\n    },\n    rangeAxisSteps: {\n        defaultValue: undefined,\n        requestable: false,\n        savable: true,\n    },\n    regressionType: { defaultValue: 'NONE', requestable: false, savable: true },\n    showData: { defaultValue: true, requestable: false, savable: true },\n    targetLineLabel: {\n        defaultValue: undefined,\n        requestable: false,\n        savable: true,\n    },\n    targetLineValue: {\n        defaultValue: undefined,\n        requestable: false,\n        savable: true,\n    },\n    aggregationType: {\n        defaultValue: 'DEFAULT',\n        requestable: true,\n        savable: true,\n    },\n    completedOnly: { defaultValue: false, requestable: true, savable: true },\n    hideSubtitle: { defaultValue: false, requestable: false, savable: true },\n    hideTitle: { defaultValue: false, requestable: false, savable: true },\n    sortOrder: { defaultValue: '0', requestable: false, savable: true },\n    subtitle: { defaultValue: undefined, requestable: false, savable: true },\n    title: { defaultValue: undefined, requestable: false, savable: true },\n\n    // only for PT\n    colTotals: { defaultValue: false, requestable: false, savable: true },\n    colSubTotals: { defaultValue: false, requestable: false, savable: true },\n    rowTotals: { defaultValue: false, requestable: false, savable: true },\n    rowSubTotals: { defaultValue: false, requestable: false, savable: true },\n    showDimensionLabels: {\n        defaultValue: false,\n        requestable: false,\n        savable: true,\n    },\n    hideEmptyColumns: {\n        defaultValue: false,\n        requestable: false,\n        savable: true,\n    },\n    hideEmptyRows: { defaultValue: false, requestable: false, savable: true },\n    skipRounding: { defaultValue: false, requestable: true, savable: true },\n    numberType: { defaultValue: 'VALUE', requestable: false, savable: true },\n    showHierarchy: { defaultValue: false, requestable: true, savable: true },\n    legendSet: { defaultValue: undefined, requestable: false, savable: true },\n    legendDisplayStrategy: {\n        defaultValue: 'FIXED',\n        requestable: false,\n        savable: true,\n    },\n    legendDisplayStyle: {\n        defaultValue: 'FILL',\n        requestable: false,\n        savable: true,\n    },\n    displayDensity: {\n        defaultValue: 'NORMAL',\n        requestable: false,\n        savable: true,\n    },\n    fontSize: { defaultValue: 'NORMAL', requestable: false, savable: true },\n    digitGroupSeparator: {\n        defaultValue: 'SPACE',\n        requestable: false,\n        savable: true,\n    },\n    approvalLevel: {\n        defaultValue: undefined,\n        requestable: true,\n        savable: false,\n    },\n\n    // these are stored in the AO under reportingParams\n    reportingPeriod: { defaultValue: false, requestable: false, savable: true },\n    organisationUnit: {\n        defaultValue: false,\n        requestable: false,\n        savable: true,\n    },\n    parentOrganisationUnit: {\n        defaultValue: false,\n        requestable: false,\n        savable: true,\n    },\n    // not exposed in UI\n    grandParentOrganisationUnit: {\n        defaultValue: false,\n        requestable: false,\n        savable: true,\n    },\n    regression: { defaultValue: false, requestable: false, savable: true },\n    cumulative: { defaultValue: false, requestable: false, savable: true },\n    measureCriteria: {\n        defaultValue: undefined,\n        requestable: true,\n        savable: true,\n    },\n    topLimit: { defaultValue: '0', requestable: false, savable: true },\n}\n\nexport const computedOptions = {\n    baseLine: { defaultValue: false, requestable: false, savable: false },\n    targetLine: { defaultValue: false, requestable: false, savable: false },\n    axisRange: { defaultValue: undefined, requestable: false, savable: false },\n    legend: { defaultValue: undefined, requestable: false, savable: false },\n}\n\nexport default options\n\nexport const getOptionsForUi = () => {\n    return Object.entries({ ...options, ...computedOptions }).reduce(\n        (map, [option, props]) => {\n            map[option] = props.defaultValue\n\n            return map\n        },\n        {}\n    )\n}\n\nexport const getOptionsForRequest = () => {\n    return Object.entries(options).filter(\n        entry => entry[1].requestable // entry = [option, props]\n    )\n}\n\nconst isNotDefault = (optionsFromVisualization, prop) => {\n    return Boolean(\n        optionsFromVisualization[prop] &&\n            optionsFromVisualization[prop] !== options[prop].defaultValue\n    )\n}\n\nexport const getOptionsFromVisualization = visualization => {\n    const optionsFromVisualization = {\n        ...getOptionsForUi(),\n        ...pick(visualization, Object.keys(options)),\n    }\n\n    optionsFromVisualization.baseLine =\n        isNotDefault(optionsFromVisualization, 'baseLineLabel') ||\n        isNotDefault(optionsFromVisualization, 'baseLineValue')\n\n    optionsFromVisualization.targetLine =\n        isNotDefault(optionsFromVisualization, 'targetLineLabel') ||\n        isNotDefault(optionsFromVisualization, 'targetLineValue')\n\n    // nested options under reportingParams\n    if (visualization.reportingParams) {\n        optionsFromVisualization.organisationUnit =\n            visualization.reportingParams.organisationUnit\n        optionsFromVisualization.reportingPeriod =\n            visualization.reportingParams.reportingPeriod\n        optionsFromVisualization.parentOrganisationUnit =\n            visualization.reportingParams.parentOrganisationUnit\n        optionsFromVisualization.grandParentOrganisationUnit =\n            visualization.reportingParams.grandParentOrganisationUnit\n    }\n\n    // cast option values from Number for some options\n    ;['baseLineValue', 'targetLineValue', 'sortOrder', 'topLimit'].forEach(\n        option => {\n            if (Object.prototype.hasOwnProperty.call(visualization, option)) {\n                optionsFromVisualization[option] = String(visualization[option])\n            }\n        }\n    )\n\n    return optionsFromVisualization\n}\n","import { getOptionsForRequest } from './options'\n\nexport const getRequestOptions = (visualization, filters) => {\n    const options = getOptionsForRequest().reduce((map, [option, props]) => {\n        // only add parameter if value !== default\n        if (\n            visualization[option] !== undefined &&\n            visualization[option] !== props.defaultValue\n        ) {\n            map[option] = visualization[option]\n        }\n\n        return map\n    }, {})\n\n    // interpretation filter\n    if (filters.relativePeriodDate) {\n        options.relativePeriodDate = filters.relativePeriodDate\n    }\n\n    // global filters\n    // userOrgUnit\n    if (filters.userOrgUnit && filters.userOrgUnit.length) {\n        const ouIds = filters.userOrgUnit.map(\n            ouPath => ouPath.split('/').slice(-1)[0]\n        )\n\n        options.userOrgUnit = ouIds.join(';')\n    }\n\n    return options\n}\n","import { isYearOverYear } from '@dhis2/analytics'\nimport {\n    apiFetchAnalyticsForYearOverYear,\n    apiFetchAnalytics,\n} from '../api/analytics'\nimport { computeGenericPeriodNames } from './analytics'\nimport { getRequestOptions } from './getRequestOptions'\n\nexport const fetchData = async ({\n    visualization,\n    filters,\n    d2,\n    forDashboard,\n}) => {\n    const options = getRequestOptions(visualization, filters)\n\n    const extraOptions = {\n        dashboard: forDashboard,\n    }\n\n    if (isYearOverYear(visualization.type)) {\n        const {\n            responses,\n            yearlySeriesLabels,\n        } = await apiFetchAnalyticsForYearOverYear(d2, visualization, options)\n\n        return {\n            responses,\n            extraOptions: {\n                ...extraOptions,\n                yearlySeries: yearlySeriesLabels,\n                xAxisLabels: computeGenericPeriodNames(responses),\n            },\n        }\n    }\n\n    return {\n        responses: await apiFetchAnalytics(d2, visualization, options),\n        extraOptions,\n    }\n}\n","import React, { useEffect, useState, useCallback } from 'react'\nimport { VIS_TYPE_PIVOT_TABLE } from '@dhis2/analytics'\nimport { useDataEngine } from '@dhis2/app-runtime'\nimport PropTypes from 'prop-types'\n\nimport { apiFetchLegendSets } from './api/legendSets'\nimport ChartPlugin from './ChartPlugin'\nimport PivotPlugin from './PivotPlugin'\nimport { fetchData } from './modules/fetchData'\n\nconst LEGEND_DISPLAY_STRATEGY_BY_DATA_ITEM = 'BY_DATA_ITEM'\nconst LEGEND_DISPLAY_STRATEGY_FIXED = 'FIXED'\n\nexport const VisualizationPlugin = ({\n    d2,\n    visualization,\n    filters,\n    forDashboard,\n    onError,\n    onLoadingComplete,\n    onResponsesReceived,\n    ...props\n}) => {\n    const engine = useDataEngine()\n    const [fetchResult, setFetchResult] = useState(null)\n\n    const doFetchData = useCallback(async () => {\n        const result = await fetchData({\n            visualization,\n            filters,\n            d2,\n            forDashboard,\n        })\n\n        if (result.responses.length) {\n            onResponsesReceived(result.responses)\n        }\n\n        return result\n    }, [d2, filters, forDashboard, onResponsesReceived, visualization])\n\n    const doFetchLegendSets = useCallback(\n        async legendSetIds => {\n            if (!legendSetIds.length) {\n                return []\n            }\n\n            const response = await apiFetchLegendSets(engine, legendSetIds)\n\n            if (response && response.legendSets) {\n                return response.legendSets.legendSets\n            }\n        },\n        [engine]\n    )\n\n    useEffect(() => {\n        setFetchResult(null)\n        const doFetchAll = async () => {\n            const { responses, extraOptions } = await doFetchData(\n                visualization,\n                filters,\n                forDashboard\n            )\n\n            const legendSetIds = []\n\n            switch (visualization.legendDisplayStrategy) {\n                case LEGEND_DISPLAY_STRATEGY_FIXED:\n                    if (visualization.legendSet && visualization.legendSet.id) {\n                        legendSetIds.push(visualization.legendSet.id)\n                    }\n                    break\n                case LEGEND_DISPLAY_STRATEGY_BY_DATA_ITEM: {\n                    // parse responses to extract legendSet ids from metaData\n                    // multiple responses are only for YOY which does not support legends\n                    // safe to use only the 1st\n                    // dx dimensions might not be present, the empty array covers that case\n                    const dxIds = responses[0].metaData.dimensions.dx || []\n\n                    dxIds.forEach(dxId => {\n                        const legendSetId =\n                            responses[0].metaData.items[dxId].legendSet\n\n                        if (legendSetId) {\n                            legendSetIds.push(legendSetId)\n                        }\n                    })\n\n                    break\n                }\n            }\n\n            const legendSets = await doFetchLegendSets(legendSetIds)\n\n            setFetchResult({\n                visualization,\n                legendSets,\n                responses,\n                extraOptions,\n            })\n            onLoadingComplete()\n        }\n\n        doFetchAll().catch(error => {\n            onError(error)\n        })\n\n        /* eslint-disable-next-line react-hooks/exhaustive-deps */\n    }, [visualization, filters, forDashboard])\n\n    if (!fetchResult) {\n        return null\n    }\n\n    if (\n        !fetchResult.visualization.type ||\n        fetchResult.visualization.type === VIS_TYPE_PIVOT_TABLE\n    ) {\n        return (\n            <PivotPlugin\n                visualization={fetchResult.visualization}\n                responses={fetchResult.responses}\n                legendSets={fetchResult.legendSets}\n                {...props}\n            />\n        )\n    } else {\n        return (\n            <ChartPlugin\n                visualization={fetchResult.visualization}\n                responses={fetchResult.responses}\n                extraOptions={fetchResult.extraOptions}\n                legendSets={fetchResult.legendSets}\n                {...props}\n            />\n        )\n    }\n}\n\nVisualizationPlugin.defaultProps = {\n    filters: {},\n    forDashboard: false,\n    onError: Function.prototype,\n    onLoadingComplete: Function.prototype,\n    onResponsesReceived: Function.prototype,\n    visualization: {},\n}\nVisualizationPlugin.propTypes = {\n    d2: PropTypes.object.isRequired,\n    visualization: PropTypes.object.isRequired,\n    filters: PropTypes.object,\n    forDashboard: PropTypes.bool,\n    onError: PropTypes.func,\n    onLoadingComplete: PropTypes.func,\n    onResponsesReceived: PropTypes.func,\n}\n"],"names":["legendSetsQuery","legendSets","resource","params","ids","fields","filter","join","apiFetchLegendSets","dataEngine","query","variables","ChartPlugin","visualization","responses","extraOptions","id","renderCounter","style","onChartGenerated","animation","defaultAnimation","canvasRef","useRef","undefined","renderVisualization","useCallback","visualizationConfig","createVisualization","current","isSingleValue","type","getSVGForExport","sourceHeight","sourceWidth","useEffect","React","defaultProps","filters","Function","prototype","propTypes","PropTypes","object","isRequired","arrayOf","number","func","PivotPlugin","PivotTable","response","peId","apiFetchAnalytics","d2","options","req","analytics","request","fromModel","withParameters","withIncludeNumDen","VIS_TYPE_PIVOT_TABLE","rawResponse","aggregate","get","apiFetchAnalyticsForYearOverYear","yearlySeriesReq","addPeriodDimension","yearlySeries","withSkipData","withSkipMeta","withIncludeMetadataDetails","relativePeriodDate","withRelativePeriodDate","yearlySeriesRes","fetch","requests","yearlySeriesLabels","now","Date","currentDay","getDate","padStart","currentMonth","getMonth","metaData","dimensions","forEach","period","push","items","name","startDate","Promise","all","then","map","res","computeGenericPeriodNames","xAxisRes","reduce","out","pe","length","metadata","genericPeriodNames","periodId","replace","baseLineLabel","defaultValue","requestable","savable","baseLineValue","cumulativeValues","domainAxisLabel","hideEmptyRowItems","hideLegend","noSpaceBetweenColumns","percentStackedValues","rangeAxisDecimals","rangeAxisLabel","rangeAxisMaxValue","rangeAxisMinValue","rangeAxisSteps","regressionType","showData","targetLineLabel","targetLineValue","aggregationType","completedOnly","hideSubtitle","hideTitle","sortOrder","subtitle","title","colTotals","colSubTotals","rowTotals","rowSubTotals","showDimensionLabels","hideEmptyColumns","hideEmptyRows","skipRounding","numberType","showHierarchy","legendSet","legendDisplayStrategy","legendDisplayStyle","displayDensity","fontSize","digitGroupSeparator","approvalLevel","reportingPeriod","organisationUnit","parentOrganisationUnit","grandParentOrganisationUnit","regression","cumulative","measureCriteria","topLimit","getOptionsForRequest","Object","entries","entry","getRequestOptions","option","props","userOrgUnit","ouIds","ouPath","split","slice","fetchData","forDashboard","dashboard","isYearOverYear","xAxisLabels","LEGEND_DISPLAY_STRATEGY_BY_DATA_ITEM","LEGEND_DISPLAY_STRATEGY_FIXED","VisualizationPlugin","onError","onLoadingComplete","onResponsesReceived","engine","useDataEngine","fetchResult","setFetchResult","useState","doFetchData","result","doFetchLegendSets","legendSetIds","doFetchAll","dxIds","dx","dxId","legendSetId","catch","error","bool"],"mappings":"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"}